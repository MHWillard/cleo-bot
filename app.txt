Cleo2525 bot basically posts a countdown by year and date leading up to the events of the series Cleopatra 2525. It'll be hosted on Heroku and do it automatically each day at a certain time. It also posts the intro each day as well.

NEEDED
-Twitter API
-Node/Express
-Heroku for hosting
-Twitter account

//OBJECTS

//PACKAGES
//TWITTER CONNECTION

//POST CONTENT
//-get countdown variable
//prepare post: "Only [variable] years and [days] days left until the events of Cleopatra 2525! [youtube link to intro]"
//-push to post object

//COUNTDOWN FUNCTION
//-get current date
//-figure out how off it is from 01/01/2525
//-convert to years and days
//-pass as variable to post content
//ACTUAL POST OBJECT

TWEET PROCESS:
//check the time of day
//if time of day is true: connect to Twitter
//prepare the post content: IE, create a scheduled tweet
//get scheduled tweets
//make the post

//api documentation: Scheduled Tweets

//STEPS:
-make basic Node backend
-attach to Heroku hosting
-set automatic timely ping

//LOG
5/14
-applied to Twitter developer API
-cloned repo
-psuedocode outline for bot
-created basic Node/Express hello world backend
-created Heroku account
-installed Heroku CLI
NEXT: deploy basic Node Express app to Heroku

5/15
-created heroku branch, pushed app to branch, made procfile
-created environmental variable file and set app.js to read
-pushed changes to remote Heroku and confirmed working
-looked at Twitter API and planned how to execute with POST
-created Protonmail to use for Twitter bot account
-created Twitter bot account
NEXT: install Twit NPM for use to manage API connection

5/16
-installed twit npm package
-planned out how to approach scheduled cron jobs in Node; package might work best here
-installed node-cron package
-tried working out how to use cron as a module but decided to assign in app.js for now
-set up cron job and ran on Heroku: only did once instead of every two minutes
NEXT: fix cron job to repeat regularly; set up Twit to use with API

5/17
-fixed cron job to run every minute
-started working on timer.js - should install Luxon to make it work or Day.js
-installed day.js as module to test cron job dates; still working on it; returning undefined in log

5/18
-got export working: had to use modules.export
-set up day.js to get difference of years and days for date range; successfully was able to get countdown going

5/19
-modified day.js to accurately count number of years and days left
-started working on understanding Twitter API to set scheduled tweets ultimately by cron job

5/20
-added env file to gitignore and keys to heroku
-worked on setting developer API connection to log search data to console to establish connection
-was able to get API connection to work but only with local .env files: need to see:
--how to run Heroku non-locally (the Heroku app's settings has a web URL that you can run over the web)
--how to pull from config vars (Heroku web app does this)

5/21
-worked on blocking out next steps for development
-installed heroku scheduler and read docs for timing the job
-set up scheduler job to test on heroku (will continue as much dev on local as possible); need to learn how to set tasks for it

5/22
-tested setup for heroku scheduler; needed to remove routes so heroku can fire it
-ran heroku scheduler test: worked
-tried test post: need to set user auth

5/23
-generated access tokens
-added tokens to .env and Heroku app
-tested Twitter API tweet command: successful
-applied to dev account on bot Twitter to gain access to correct API keys: need to approve
-tested JS line break for tweet
-on the side: added images to bot Twitter account
-dev account was confirmed, replaced API keys

5/24
-tested app bot locally
-pushed new changes to Heroku and set scheduler

//routinely ping
//test if current time converted = 6:30 PM EST converted
//OR: run internal clock
//if condition is true: internal log of success (later: prepare tweet)

//NEXT STEPS:
-confirm cleopatra bot dev access
-configure API to post
-run tests
-set scheduled tweets with Heroku scheduler
-add images to account